openapi: 3.0.0
info:
  title: Webhook API
  description: API for managing Skipify webhook integrations.
  version: 1.0.6
tags:
  - name: Subscriptions
    description: Operations available to manage a merchant's webhook subscriptions
  - name: Events
    description: Operations related to managing a merchant's webhook event notifications
paths:
  /webhook/subscriptions:
    get:
      tags:
        - Subscriptions
      summary: Get all subscriptions for a given partner (a.k.a. merchant).
      description: |
        Used to get all subscriptions for a merchant specified in the query parameter
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint. The list of subscriptions returned is based on the scope of the merchantId specified in the query parameter.
      operationId: getAllSubscriptions
      parameters:
        - $ref: '#/components/parameters/MerchantId'
      responses:
        '200':
          description: All webhook subscriptions for a given merchant
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionResponse'
        '404':
          description: partnerId not found
    post:
      tags:
        - Subscriptions
      summary: Create a new webhook subscription
      description: |
        Used to create a new webhook subscription for a merchant.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      operationId: createSubscription
      parameters:
        - $ref: '#/components/parameters/MerchantId'
      requestBody:
        description: Subscription to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionInput'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          description: Bad request body

          
  /webhook/subscriptions/{subscriptionId}:
    get:
      tags:
        - Subscriptions
      summary: Get a single webhook subscription by subscriptionId
      description: |
        Used to get a single subscription by the passed in subscriptionId.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      operationId: getSubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionPathId'
      responses:
        '200':
          description: Subscription matching given subscriptionId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '404':
          description: subscriptionId not found
    put:
      tags:
        - Subscriptions
      summary: Update a webhook subscription
      description: |
        Used to update a webhook subscription for the merchant specified in the query parameter.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      operationId: updateSubscription
      parameters:
        - $ref: '#/components/parameters/MerchantId'
        - $ref: '#/components/parameters/SubscriptionPathId'
      requestBody:
        description: Subscription to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionInput'
      responses:
        '201':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          description: Bad request body
        '403':
          description: Forbidden
        '404':
          description: subscriptionId not found
    delete:
      tags:
        - Subscriptions
      summary: Delete a single subscription by subscriptionId
      description: |
        Used to delete a single subscription by subscriptionId for the merchant specified in the query parameter.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      operationId: deleteSubscription
      parameters:
        - $ref: '#/components/parameters/MerchantId'
        - $ref: '#/components/parameters/SubscriptionPathId'
      responses:
        '204':
          description: Subscription deleted successfully
        '403':
          description: Forbidden
        '404':
          description: subscriptionId not found
  
  /webhook/eventTypes:
    get:
      tags:
        - Events
      summary: Get all eventTypes
      description: |
        Used to get all eventTypes that a merchant can subscribe to.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      operationId: getAllEventTypes
      responses:
        '200':
          description: All eventTypes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'

  
  /webhook/events:
    get:
      tags:
        - Events
      summary: Get all events for merchant
      description: |
        Used to get all events for a merchant.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint. The list of events returned is based on the scope of the merchantId passed as a query parameter.
      operationId: getAllEventsForMerchant
      parameters:
        - $ref: '#/components/parameters/MerchantId'
        - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageSize'
        - $ref: 'https://api.swaggerhub.com/domains/Skipify/skipify-core-domain/1.0.1#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/DateFromQueryFilter'
        - $ref: '#/components/parameters/DateToQueryFilter'
        - $ref: '#/components/parameters/StatusesQueryFilter'
        - $ref: '#/components/parameters/EventsTypesQueryFilter'
        - $ref: '#/components/parameters/SortByQueryFilter'
      responses:
        '200':
          description: All eventTypes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PagedEvents'
  /webhook/events/{eventId}:
    get:
      tags:
        - Events
      summary: Get a single event by eventId
      description: |
        Used to get a single event by eventId.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      operationId: getEvent
      parameters:
        - $ref: '#/components/parameters/EventId'
      responses:
        '200':
          description: Event matching given eventId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: eventId not found
  /webhook/events/{eventId}/retry:
    post:
      tags:
        - Events
      summary: Retry an event notification by event id
      description: |
        Used to retry sending an event notication by specified eventId.
        
        A valid **JWT** or **[MAC](https://docs.skipify.com/docs/api-authentication-mac)** is required to access this endpoint.
      operationId: retryEvent
      parameters:
        - $ref: '#/components/parameters/EventId'
      responses:
        '200':
          description: Event notification attempted
        '404':
          description: eventId not found
        '500':
          description: Internal error occurred
components:
  parameters:
    DateFromQueryFilter:
      name: dateFrom
      in: query
      description: Date string representing the beginning of a date range in UTC
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: '2021-11-03T20:45:35.947437'
    DateToQueryFilter:
      name: dateTo
      in: query
      description: DateTime string representing the end of a date range in UTC
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: '2021-12-03T20:45:35.947437'
    EventsTypesQueryFilter:
      name: eventTypes
      in: query
      description: List of event types to filter on
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/EventNameArray'
    SortByQueryFilter:
      name: sortBy
      in: query
      description: Sorting direction controlling sort order by eventStatus
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: ASCENDING
    StatusesQueryFilter:
      name: statuses
      in: query
      description: List of statuses to filter on
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/EventStatusArray'
    SubscriptionPathId:
      name: subscriptionId
      in: path
      required: true
      description: |
        The webhook subscription id
      schema:
        type: string
        format: uuid
        example: "655f09c7-5e07-42dc-8010-91235849cc5c"
    SubscriptionQueryId:
      name: subscriptionId
      in: query
      required: false
      description: |
        The webhook subscription id
      schema:
        type: string
        format: uuid
        example: "655f09c7-5e07-42dc-8010-91235849cc5c"
    PartnerId:
      name: partnerId
      in: query
      required: false
      description: |
        Pass an optional partnerId to filter the list of returned
        subscriptions by this identifier
      schema:
        type: string
        format: uuid
        example: "fdf39d5b-752d-449a-9d14-bbc5dbfbee72"
    MerchantId:
      name: merchantId
      in: query
      required: true
      description: |
        Pass a merchantId to control which merchant an action is taken against
      schema:
        type: string
        format: uuid
        example: "0017a26d-eaf8-4934-947a-6a005d38224f"
    EventId:
      name: eventId
      in: path
      required: true
      description: |
        The webhook event id
      schema:
        type: string
        format: uuid
        example: "3a60492f-9b68-45b2-b6fb-1585d1a3a89e"
        
  schemas:
    SubscriptionInput:
      required:
        - endpoint
        - eventSubscriptions
        - failureNotificationEmail
        - secret
      type: object
      properties:
        endpoint:
          type: string
          example: https://my-webhook-url
        failureNotificationEmail:
          type: string
          format: email
          example: failures@email.com
        secret:
          type: string
          example: ImASecret
        eventSubscriptions:
          $ref: '#/components/schemas/EventNameArray'
        description:
          maxLength: 1000
          type: string
          example: Description of subscription
        includeChildMerchantEvents:
          type: boolean
          description: 'Flag used to determine if the created subscription should include events triggered by children merchants'
          example: true
    
    SubscriptionResponse:
      required:
        - created
        - endpoint
        - eventSubscriptions
        - failureNotificationEmail
        - merchantId
        - modified
        - subscriptionId
      type: object
      properties:
        subscriptionId:
          type: string
          format: uuid
          example: 2b0df5e4-52ac-495e-b3d1-2879b9486f53
        merchantId:
          type: string
          format: uuid
          example: a4ce3a25-c8c5-4db1-9798-e5c126c51a6d
        endpoint:
          type: string
          example: https://my-webhook-url
        failureNotificationEmail:
          type: string
          format: email
          example: failures@email.com
        created:
          type: string
          description: >-
            Creation date time the subscription was created in UTC:
            'yyyy-MM-ddTHH:mm:ssZ'
          format: timestamp
          example: '2021-07-28T12:01:38Z'
        modified:
          type: string
          description: >-
            Date time the subscription was last modified in UTC:
            'yyyy-MM-ddTHH:mm:ssZ'
          format: timestamp
          example: '2021-07-30T01:10:16Z'
        eventSubscriptions:
          type: array
          items:
            $ref: '#/components/schemas/EventType'
        description:
          maxLength: 1000
          type: string
          example: Description of subscription
        includeChildMerchantEvents:
          type: boolean
          description: 'Flag used to determine if the created subscription should include events triggered by children merchants'
          example: true
    
    EventType:
      required:
        - description
        - name
      type: object
      properties:
        eventName:
          $ref: '#/components/schemas/EventNames'
        eventDescription:
          type: string
          example: Order payment successful
          
    EventNameArray:
      type: array
      example: 
        - ORDER_PAYMENT_SUCCESSFUL
        - ORDER_PAYMENT_FAILED
      items: 
        $ref: '#/components/schemas/EventNames'
    
    EventNames:
      type: string
      enum:
        - ORDER_PAYMENT_SUCCESSFUL
        - ORDER_PAYMENT_FAILED
        - PAYMENT_REQUEST_EXPIRED
    
    EventStatusArray:
      type: array
      example:
        - SUCCESS
        - FAILURE
      items:
        $ref: '#/components/schemas/EventStatus'
        
    EventStatus:
      type: string
      example: SUCCESS
      enum:
        - TODO
        - IN_PROCESS
        - SUCCESS
        - FAILURE
    
    EventNotificationAttemptStatus:
      type: string
      example: SUCCESS
      enum:
        - SUCCESS
        - FAILURE
    
    EventNotificationAttempt:
      required:
        - notificationAttemptStatus
        - responseCode
      type: object
      properties:
        notificationAttemptStatus:
          $ref: '#/components/schemas/EventNotificationAttemptStatus'
        responseCode:
          type: number
          example: 200
        failureMessage:
          type: string
          description: Optional failure message
    
    Event:
      required:
        - created
        - displayStatus
        - endpointUrl
        - eventId
        - eventStatus
        - eventType
        - merchantId
        - notificationAttemptCount
        - subscriptionId
      type: object
      properties:
        eventId:
          type: string
          format: uuid
          example: 3eff4893-1988-4649-accd-2511f37a062c
        merchantId:
          type: string
          format: uuid
          example: a4ce3a25-c8c5-4db1-9798-e5c126c51a6d
        subscriptionId:
          type: string
          format: uuid
          example: 2b0df5e4-52ac-495e-b3d1-2879b9486f53
        eventType:
          $ref: '#/components/schemas/EventType'
        eventStatus:
          $ref: '#/components/schemas/EventStatus'
        notificationAttemptCount:
          type: number
          example: 1
        notificationAttempts:
          type: array
          items:
            $ref: '#/components/schemas/EventNotificationAttempt'
        endpointUrl:
          type: string
          description: Subscription's callback URL
        created:
          type: string
          description: DateTime of event creation specified in UTC
        displayStatus:
          type: string
          description: Mapping of event status to UI friendly status
    
    PagedEvents:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/PagedEvents_description'
        links:
          $ref: '#/components/schemas/PagedEvents_links'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      description: Pagination result for events
    
    PagedEvents_description:
      type: object
      properties:
        totalRecords:
          type: number
          description: Total number of records
        totalPages:
          type: number
          description: Total number of pages
        pageNumber:
          type: number
          description: Requested page number
        pageSize:
          type: number
          description: Number of records per page
        unseenRecords:
          type: number
          description: Number of records that occurred AFTER dateTo (if specified)
    
    PagedEvents_links:
      type: object
      properties:
        previousPage:
          type: string
          description: Link to previous page if it exists
        nextPage:
          type: string
          description: Link to next page if it exists
        firstPage:
          type: string
          description: Link to first page if more than one page exists
        lastPage:
          type: string
          description: Link to last page if more than one page exists
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Skipify/webhook-subscription-management/1.0.6